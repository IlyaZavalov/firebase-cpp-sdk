name: Update Android and iOS dependencies
on:
  workflow_dispatch:
    inputs:

env:
  branchPattern: "feature_branch/*"
  mainBranch: "main"
  triggerTestsLabel: "tests-requested: quick"

jobs:
  list_feature_branches:
    name: list-feature-branches
    runs-on: ubuntu-20
    outputs:
      branch_list: ${{ steps.get-branches.outputs.branch-list }}
      
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Get list of feature branches.
        id: get-branches
        run: |
            branch_list=$(git branch --list '${{ env.branchPattern }}' | sed 's/ /,/')
            echo ${branch_list} >> $GITHUB_OUTPUT

  create_merge_prs:
    name: create-merge-pr-${{ matrix.branch_name }}
    needs: [ list_feature_branches ]
    runs-on: ubuntu-20
    strategy:
      fail-fast: false
      matrix:
        branch_name: [ ${{ needs.list_feature_branches.branch_list }} ]
    steps:
      - name: Get token for firebase-workflow-trigger
        uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.WORKFLOW_TRIGGER_APP_ID }}
          private_key: ${{ secrets.WORKFLOW_TRIGGER_APP_PRIVATE_KEY }}

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch_name }}
          fetch-depth: 0
          submodules: false

      - name: Install prerequisites
        run: |
          python scripts/gha/install_prereqs_desktop.py
          python -m pip install requests

      - name: Create merge PR
        id: create-pr
        run: |
	    # Attempt a merge, then check if any files changed.
            git merge --no-commit --no-ff ${{ env.mainBranch }} || true
            if git diff --quiet ${{ matrix.branch_name }}; then
              # No merge necessary.
  	      echo "::warning ::No merge needed for ${{ matrix.branch_name }}, won't create pull request."
              echo "created_pr_number=0" >> $GITHUB_OUTPUT
              exit 0          
            fi

            # Undo the actual merge. Let the PR creation handle it.
            git merge --abort
            
            date_str=$(date "+%b %d, %Y")
            pr_title="Weekly merge of ${{ env.mainBranch }} into ${{ matrix.branch_name }} - ${date_str}"
            pr_body="Automatic weekly merge of ${{ env.mainBranch }} into ${{ matrix.branch_name }}.

	    > Created on ${date_str} by [${{github.workflow}} workflow]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID).
	    "
            pr_number=$(python scripts/gha/create_pull_request.py --token ${{ steps.generate-token.outputs.token }} --head "${{ matrix.branch_name }}" --base "${{ env.mainBranch }}" --title "${pr_title}" --body "${pr_body}")
            echo "created_pr_number=${pr_number}" >> $GITHUB_OUTPUT

      - name: Set test trigger label.
        uses: actions-ecosystem/action-add-labels@v1
        if: ${{ steps.push-branch.outputs.created_pr_number }}
        with:
          github_token: ${{ steps.generate-token.outputs.token }}
          number: ${{ steps.push-branch.outputs.created_pr_number }}
          labels: "${{ env.triggerTestsLabel }}"
